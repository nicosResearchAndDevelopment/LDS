@prefix cred:                          <https://w3.org/2018/credentials#> .
@prefix foaf:                          <http://xmlns.com/foaf/0.1/> .
@prefix odrl:                          <http://www.w3.org/ns/odrl/2/> .
@prefix org:                           <http://www.w3.org/ns/org#> .
@prefix owl:                           <http://www.w3.org/2002/07/owl#> .
@prefix rdf:                           <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:                          <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos:                          <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd:                           <http://www.w3.org/2001/XMLSchema#> .

@prefix lds:                           <https://github.com/nicosResearchAndDevelopment/LDS/> .
@prefix entity:                        <https://github.com/nicosResearchAndDevelopment/LDS/model/concept/entity/> .
@prefix legal:                         <https://github.com/nicosResearchAndDevelopment/LDS/model/concept/legal/> .
@prefix purpose:                       <https://github.com/nicosResearchAndDevelopment/LDS/model/concept/work/purpose/> .
@prefix credential:                    <https://github.com/nicosResearchAndDevelopment/LDS/model/concept/credential/> .
@prefix authorization:                 <https://github.com/nicosResearchAndDevelopment/LDS/model/concept/authorization/> .

@prefix x-eidas:                       <https://github.com/nicosResearchAndDevelopment/LDS/blob/main/misc/credentials/elsi/x-eidas#> .

@prefix company-Y:                     <https://www.company-Y.com/> .
@prefix Arthur:                        <https://www.company-Y.com/employee/arthur/> .
@prefix Bob:                           <https://www.company-Y.com/employee/bob/> .
@prefix Jim:                           <https://www.company-Y.com/employee/jim/> .
@prefix Jonny:                         <https://www.company-Y.com/employee/jonny/> .

@prefix company-B:                     <https://www.company-B.com/> .
@prefix Alice:                         <https://www.company-B.com/employee/alice/> .

## region company
## region company :: Company-Y

<https://www.company-Y.com/>
    a                                         foaf:Organization ;
    a                                         org:Organization ;
    a                                         odrl:Party ;
    org:member                                <https://www.company-Y.com/#member> ;
    lds:employee                              Arthur: ;
    lds:employee                              Bob: ;
    lds:employee                              Jim: ;
    lds:employee                              Jonny: ;
    a                                         entity:Entity ;
    entity:value                              <https://www.company-Y.com/responsibility> ;
    entity:value                              <https://european-union.europa.eu/principles-countries-history/principles-and-values/aims-and-values_de> ;
    entity:appointedRepresentative            Arthur: ;
    entity:appointedRepresentative            Bob: ;
    entity:appointedRepresentative            Jim: ;
    a                                         entity:Organisation ;         ## REM: sub class of `entity:LegalEntity`
    entity:legalEntityIdentifier              "VATDE-12345670"^^xsd:string ;
    legal:legalBasis                          <https://www.gesetze-im-internet.de/gmbhg/> ;
    entity:legalRepresentative                Arthur: ;
    entity:legalEntityAppointedRepresentative Bob: ;
    ## REM: Jim .-( is not in the house... represents PowerPoints only...
    rdfs:isDefinedBy                          company-Y: .

Arthur:
    a                foaf:Person ;
    a                entity:LegalEntityRepresentative ;
    foaf:firstName   "Arthur"^^xsd:string ;
    rdfs:isDefinedBy company-Y: .

Bob:
    a                  foaf:Person ;
    a                  entity:LegalEntityAppointedRepresentative ;
    entity:actOnBehalf company-Y: ;
    foaf:firstName     "Bob"^^xsd:string ;
    rdfs:isDefinedBy   company-Y: .

Jim:
    a                foaf:Person ;
    a                entity:AppointedRepresentative ;
    foaf:firstName   "Jim"^^xsd:string ;
    rdfs:isDefinedBy company-Y: .

Jonny:
    a                foaf:Person ;
    foaf:firstName   "Jonny"^^xsd:string ;
    rdfs:isDefinedBy company-Y: .

<https://www.company-Y.com/#member>
    rdf:type         xsd:anyURI ;
    rdf:value        "https://www.company-Y.com/employee/arthur/"^^xsd:string,
                     "https://www.company-Y.com/employee/bob/"^^xsd:string,
                     "https://www.company-Y.com/employee/jim/"^^xsd:string,
                     "https://www.company-Y.com/employee/jonny/"^^xsd:string ;
    rdfs:isDefinedBy company-Y: .

<https://www.company-Y.com/member/>
    rdf:type         foaf:Agent ;
    rdf:value        Arthur: ;
    rdf:value        Bob: ;
    rdf:value        Jim: ;
    rdf:value        Jonny: ;
    rdfs:isDefinedBy company-Y: .

## endregion company :: Company-Y
## endregion company

## region credential

## region credential :: Bob

<https://www.company-Y.com/credential/identifier/bob>           ## REM: Bob REBOOTED CREDENTIAL
    a                  credential:Credential ;
    a                  foaf:Person ;
    credential:subject [ a              credential:Subject ;
                         foaf:firstName "Bob"^^xsd:string ; ## REM: from `foaf:Person`
                       ] ;
    rdfs:isDefinedBy   company-Y: .

<https://www.company-Y.com/legal/representer/bob-42-42-42-41>
    a                  entity:LegalEntityAppointedRepresentative ;
    foaf:firstName     "Bob"^^xsd:string ;
    entity:actOnBehalf company-Y: ;
    rdfs:isDefinedBy   company-Y: .

<https://www.company-Y.com/legal/representer/credential/bob-42-42-42-42>
    a                  credential:Credential ;
    a                  foaf:Person ;
    a                  entity:Actor ;
    a                  entity:LegalEntityAppointedRepresentative ;
    credential:subject [ a                  credential:Subject ;
                         foaf:firstName     "Bob"^^xsd:string ;  ## REM: from `foaf:Person`
                         entity:actOnBehalf company-Y: ;         ## REM: from `entity:LegalEntityAppointedRepresentative`
                       ] ;
    rdfs:isDefinedBy   company-Y: .

company-Y:PurposeAuthorization
    a                owl:Class, skos:Concept ;
    rdfs:subClassOf  purpose:Purpose ;
    rdfs:isDefinedBy company-Y: .

## REM: this is **NOT** an extension to Bob (as employee)...
<https://www.company-Y.com/credential/identifier/bob>       ## REM: Bob REBOOTED IDENTIFIER
    foaf:firstName     "Bob"^^xsd:string ;  ## REM: from `foaf:Person`
    entity:actOnBehalf company-Y: ;         ## REM: from `entity:LegalEntityAppointedRepresentative`
    purpose:target     "https://www.company-B.com/"^^xsd:string ;
    purpose:purpose    <https://www.company-B.com/purpose/onboarding/> ;
    rdfs:isDefinedBy   company-Y: .

<https://www.company-Y.com/legal/representer/credential/bob-42-42-42-43>
    a                    credential:Subject ;
    a                    foaf:Person ;
    a                    entity:LEAR_NP ; ## REM: `entity:LegalPerson`
    a                    company-Y:PurposeAuthorization ;
    credential:validFrom "2023-11-10T00:00:00Z"^^xsd:dateTimeStamp ;
    credential:validTo   "2023-11-11T00:00:00Z"^^xsd:dateTimeStamp ;
    credential:subject   <https://www.company-Y.com/credential/identifier/bob> ;
    rdfs:isDefinedBy     company-Y: .

## REM: >>> Verifiable ID <<< this is **NOT** an extension to Bob (as employee)...
<https://www.company-Y.com/verifiable/identifier/bob/>            ## REM: Bob REBOOTED VERIFIABLE IDENTIFIER
    foaf:firstName     "Bob"^^xsd:string ;  ## REM: from `foaf:Person`
    entity:actOnBehalf company-Y: ;         ## REM: from `entity:LegalEntityAppointedRepresentative`
    rdfs:isDefinedBy   company-Y: .

## REM: as (cred) Verifiable Credential
<https://www.company-Y.com/legal/representer/verifiable/credential/bob-42-42-42-44>
    a                      foaf:Person ;
    a                      entity:LEAR_NP_VC ; ## REM: `entity:LegalPerson` and `cred:VerifiableCredential`
    cred:issuer            "https://www.company-Y.com/"^^xsd:anyURI ;
    cred:issuanceDate      "2023-11-10T00:00:00Z"^^xsd:dateTimeStamp ;
    cred:validFrom         "2023-11-10T00:00:00Z"^^xsd:dateTimeStamp ;
    cred:validTo           "2023-11-11T00:00:00Z"^^xsd:dateTimeStamp ;
    cred:credentialSubject <https://www.company-Y.com/verifiable/identifier/bob/> ;
    rdfs:isDefinedBy       company-Y: .

## region DANGER ZONE

#############################################################################################
## REM: DANGER ZONE - DANGER ZONE - DANGER ZONE - DANGER ZONE - DANGER ZONE - DANGER ZONE
## REM: FASTEN SEAT BELTS - FASTEN SEAT BELTS - FASTEN SEAT BELTS - FASTEN SEAT BELTS
## REM: DANGER ZONE - DANGER ZONE - DANGER ZONE - DANGER ZONE - DANGER ZONE - DANGER ZONE
#############################################################################################

## REM: Purpose in Authorization

## REM: >>> Purpose <<< this is **NOT** an extension to Bob (as employee)...
<https://www.company-Y.com/verifiable/identifier/bob/>            ## REM: Bob REBOOTED VERIFIABLE IDENTIFIER
    foaf:firstName     "Bob"^^xsd:string ;  ## REM: from `foaf:Person`
    entity:actOnBehalf company-Y: ;         ## REM: from `entity:LegalEntityAppointedRepresentative`
    purpose:target     "https://www.company-B.com/"^^xsd:string ;
    purpose:purpose    <https://www.company-B.com/purpose/onboarding/> ;
    rdfs:isDefinedBy   company-Y: .

## REM: as LEAR_NP_VC, (cred) Verifiable Credential with Purpose in Authorization only
<https://www.company-Y.com/legal/representer/verifiable/credential/purpose/bob-42-42-42-45>
    a                      foaf:Person ;
    a                      entity:LEAR_NP_VC ; ## REM: `entity:LegalPerson` and `cred:VerifiableCredential`
    a                      company-Y:PurposeAuthorization ;
    cred:issuer            "https://www.company-Y.com/"^^xsd:anyURI ;
    cred:issuanceDate      "2023-11-10T00:01:00Z"^^xsd:dateTimeStamp ;
    cred:validFrom         "2023-11-10T00:01:00Z"^^xsd:dateTimeStamp ;
    cred:validTo           "2023-11-11T00:31:00Z"^^xsd:dateTimeStamp ; ## REM: works for half an hour...
    cred:credentialSubject <https://www.company-Y.com/verifiable/identifier/bob/> ;
    rdfs:isDefinedBy       company-Y: .

## region credential :: Bob :: Verifiable Credential, `cred:credentialSubject` as `odrl:Assertion`

## REM: Purpose as `odrl:Assertion`(Policy) in Authorization **AND** as Verifiable Credential

<https://www.company-B.com/>
    a                odrl:Asset ;
    rdfs:isDefinedBy company-Y: .

<https://www.company-Y.com/>
    a                odrl:Party ;
    rdfs:isDefinedBy company-Y: .

company-Y:PurposeAuthorization
    ## REM: at this point it is already a sub class of `purpose:Purpose`
    ## TODO: put it to ODRL Profile
    rdfs:subClassOf  odrl:Assertion ;
    rdfs:isDefinedBy company-Y: .

<https://www.company-Y.com/verifiable/identifier/bob/>            ## REM: Bob REBOOTED VERIFIABLE IDENTIFIER
    a                  odrl:Policy ;    ## REM: because `company-Y:PurposeAuthorization` is an odrl:Assertion **not** needed here...
    foaf:firstName     "Bob"^^xsd:string ;                    ## REM: from `foaf:Person`
    ## REM: `entity:actOnBehalf`:: Actor Authorization
    entity:actOnBehalf <https://www.company-Y.com/> ;         ## REM: from `entity:LegalEntityAppointedRepresentative`
    ## REM: `purpose:target`, `purpose:purpose`:: Purpose Authorization
    purpose:target     <https://www.company-B.com/> ;
    purpose:purpose    <https://www.company-B.com/purpose/onboarding/> ;
    ## REM: and here: an alternative...
    ## region odrl :: Policy
    ## REM: Bob is an Instance of `company-Y:PurposeAuthorization` and it is a sub class of `odrl:Assertion`
    odrl:permission    [ a               odrl:Permission ;
                         odrl:assigner   <https://www.company-Y.com/> ; ## REM: it is an `odrl:Party`, same as `entity:actOnBehalf`
                         odrl:target     <https://www.company-B.com/> ; ## REM: it is an `odrl:Asset`, same as `purpose:target`
                         odrl:assignee   <https://www.company-Y.com/verifiable/identifier/bob/> ; ## REM: Bob is an Instance of `odrl:Party`
                         odrl:constraint [ a                 odrl:Constraint ;
                                           odrl:leftOperand  odrl:dateTime ;
                                           odrl:operator     odrl:gteq ;
                                           odrl:rightOperand "2023-11-10T00:01:00Z"^^xsd:dateTimeStamp ; ## REM: same as `cred:validFrom`
                                           odrl:dataType     xsd:dateTimeStamp ; ] ;
                         odrl:constraint [ a                 odrl:Constraint ;
                                           odrl:leftOperand  odrl:dateTime ;
                                           odrl:operator     odrl:lt ;
                                           odrl:rightOperand "2023-11-11T00:31:00Z"^^xsd:dateTimeStamp ; ## REM: same as `cred:validTo`
                                           odrl:dataType     xsd:dateTimeStamp ; ] ;
                         odrl:action     [ a         odrl:Action ;
                                           rdf:value <https://www.company-B.com/purpose/onboarding/> ; ## REM: a class, too - anyway: "This is the Way"!
                                         ] ;
                         odrl:duty       [ ] ; ] ;
    ## endregion odrl :: Policy
    rdfs:isDefinedBy   company-Y: .

<https://www.company-Y.com/legal/representer/verifiable/credential/purpose/bob-42-42-42-46-666>
    a                      foaf:Person ;
    a                      entity:LEAR_NP_VC ; ## REM: `entity:LegalPerson` and `cred:VerifiableCredential`
    a                      company-Y:PurposeAuthorization ; ## REM: THIS IS an `odrl:Assertion`!!!!!!!   <<<<<<<<
    a                      odrl:Policy ; ## REM:
    cred:issuer            "https://www.company-Y.com/"^^xsd:anyURI ;
    cred:issuanceDate      "2023-11-10T00:01:00Z"^^xsd:dateTimeStamp ;
    cred:validFrom         "2023-11-10T00:01:00Z"^^xsd:dateTimeStamp ;
    cred:validTo           "2023-11-11T00:31:00Z"^^xsd:dateTimeStamp ; ## REM: works for half an hour...
    cred:credentialSubject <https://www.company-Y.com/verifiable/identifier/bob/> ; ## REM: ...as `odrl:Assertion`
    rdfs:isDefinedBy       company-Y: .

## endregion credential :: Bob :: Verifiable Credential, `cred:credentialSubject` as `odrl:Assertion`

## region credential :: Bob :: Verifiable Credential, `cred:credentialSubject` as `odrl:Assertion`, compact

## REM: SECOND SERVICE
## REM: Purpose as `odrl:Assertion`(Policy) in Authorization **AND** as Verifiable Credential

<https://www.company-B.com/>
    a                odrl:Asset ;
    rdfs:isDefinedBy company-Y: .

<https://www.company-Y.com/>
    a                odrl:Party ;
    rdfs:isDefinedBy company-Y: .

company-Y:PurposeAuthorization
    ## REM: at this point it is already a sub class of `purpose:Purpose`
    ## TODO: put it to ODRL Profile
    rdfs:subClassOf  odrl:Assertion ;
    rdfs:isDefinedBy company-Y: .

<https://www.company-Y.com/verifiable/identifier/bob/>
    x-eidas:DateOfBirth "1998-11-11"^^xsd:date ;
    rdfs:isDefinedBy    company-Y: .

<https://www.company-Y.com/verifiable/identifier/bob/>            ## REM: Bob REBOOTED VERIFIABLE IDENTIFIER
    a                   odrl:Policy ;    ## REM: because `company-Y:PurposeAuthorization` is an odrl:Assertion **not** needed here...
    ## region `odrl:Party`
    a                   odrl:Party ;
    ## endregion `odrl:Party`
    foaf:firstName      "Bob"^^xsd:string ;                    ## REM: from `foaf:Person`
    x-eidas:DateOfBirth "1998-11-11"^^xsd:date ;
    ## REM: `entity:actOnBehalf`:: Actor Authorization
    entity:actOnBehalf  <https://www.company-Y.com/> ;         ## REM: from `entity:LegalEntityAppointedRepresentative`
    ## REM: `purpose:target`, `purpose:purpose`:: Purpose Authorization
    purpose:target      <https://www.company-B.com/> ;
    purpose:purpose     <https://www.company-B.com/purpose/onboarding/> ;
    ## REM: and here: an alternative...
    ## region odrl :: Policy

    ## REM: compact Policy, those are targeted in given odrl-rules,,,
    ## TODO: TBC: who is the assigner?!?
    odrl:assigner       <https://www.company-Y.com/> ; ## REM: it is an `odrl:Party`, same as `entity:actOnBehalf`
    odrl:target         <https://www.company-B.com/> ; ## REM: it is an `odrl:Asset`, same as `purpose:target`
    odrl:assignee       <https://www.company-Y.com/verifiable/identifier/bob/> ; ## REM: Bob is an Instance of `odrl:Party`, **TOO**!
    ## region: TURBO In DANGER ZONE
    odrl:assignee       [ a               odrl:PartyCollection ;
                          odrl:source     <https://www.company-Y.com/verifiable/identifier/bob/> ; ## REM: `odrl:Party`
                          odrl:refinement [ a                 odrl:Constraint ;
                                            odrl:leftOperand  "entity:actOnBehalf" ;
                                            odrl:operator     odrl:eq ;
                                            odrl:rightOperand <https://www.company-Y.com/> ;
                                            odrl:dataType     xsd:anyURI ; ] ;
                          odrl:refinement [ a                 odrl:Constraint ;
                                            odrl:leftOperand  "x-eidas:DateOfBirth" ; ## >>> "1998-11-11"^^xsd:dateTime
                                            odrl:operator     odrl:lt ;
                                            odrl:rightOperand "2005-11"^^xsd:gYearMonth ;
                              ## REM:: **OR** :: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                            odrl:rightOperand ex:EighteenYearsBeforeNow ;
                                            odrl:dataType     xsd:dateTimeStamp ; ] ; ] ;
    ## endregion: TURBO In DANGER ZONE
    ## REM: Bob is an Instance of `company-Y:PurposeAuthorization` and it is a sub class of `odrl:Assertion`
    odrl:permission     [ a               odrl:Permission ;
                          odrl:constraint [ a                 odrl:Constraint ;
                                            odrl:leftOperand  odrl:dateTime ;
                                            odrl:operator     odrl:gteq ;
                                            odrl:rightOperand "2023-11-10T00:01:00Z"^^xsd:dateTimeStamp ; ## REM: same as `cred:validFrom`
                                            odrl:dataType     xsd:dateTimeStamp ; ] ;
                          odrl:constraint [ a                 odrl:Constraint ;
                                            odrl:leftOperand  odrl:dateTime ;
                                            odrl:operator     odrl:lt ;
                                            odrl:rightOperand "2023-11-11T00:31:00Z"^^xsd:dateTimeStamp ; ## REM: same as `cred:validTo`
                                            odrl:dataType     xsd:dateTimeStamp ; ] ;
                          odrl:action     [ a         odrl:Action ;
                                            rdf:value <https://www.company-B.com/purpose/onboarding/> ; ## REM: a `class?  and a `odrl:Action`, too - anyway: "This is the Way"!
                                            odrl:duty [ ] ; ] ; ] ;
    ## endregion odrl :: Policy
    rdfs:isDefinedBy    company-Y: .

<https://www.company-Y.com/legal/representer/verifiable/credential/purpose/bob-42-42-42-46-777>
    a                      foaf:Person ;
    a                      entity:LEAR_NP_VC ; ## REM: `entity:LegalPerson` and `cred:VerifiableCredential`
    a                      company-Y:PurposeAuthorization ; ## REM: THIS IS an `odrl:Assertion`!!!!!!!   <<<<<<<<
    a                      odrl:Policy ; ## REM:
    a                      odrl:Assertion ; ## REM:
    cred:issuer            <https://www.company-Y.com/> ;
    cred:issuanceDate      "2023-11-10T00:01:00Z"^^xsd:dateTimeStamp ;
    cred:validFrom         "2023-11-10T00:01:00Z"^^xsd:dateTimeStamp ;
    cred:validTo           "2023-11-11T00:31:00Z"^^xsd:dateTimeStamp ; ## REM: works for half an hour...
    cred:credentialSubject <https://www.company-Y.com/verifiable/identifier/bob/> ; ## REM: ...as `odrl:Assertion`
    rdfs:isDefinedBy       company-Y: .

## endregion credential :: Bob :: Verifiable Credential, `cred:credentialSubject` as `odrl:Assertion`, compact

## region credential :: Bob :: Verifiable Credential, `cred:credentialSubject` as `odrl:Permission`-Rule , very compact

## REM: DANGER ZONE **AND** ROCKET SCIENCE :: THIRD SERVICE
## REM: Purpose as `odrl:Assertion`(Policy) in Authorization **AND** as Verifiable Credential
## IMPORTANT: the Policy sits on level of `cred:VerifiableCredential` and not (as shown before) on level of
## IMPORTANT: ...`cred:credentialSubject`!
## IMPORTANT: ... **AND** Bob becomes a **RULE** `odrl:Rule`, `odrl:Permission`)

<https://www.company-B.com/>
    a                odrl:Asset ;
    rdfs:isDefinedBy company-Y: .

<https://www.company-Y.com/>
    a                odrl:Party ;
    rdfs:isDefinedBy company-Y: .

company-Y:PurposeAuthorization
    ## REM: at this point it is already a sub class of `purpose:Purpose`
    ## TODO: put it to ODRL Profile
    rdfs:subClassOf  odrl:Assertion ;
    rdfs:isDefinedBy company-Y: .

<https://www.company-Y.com/verifiable/identifier/bob/>
    x-eidas:DateOfBirth "1998-11-11"^^xsd:date ;
    rdfs:isDefinedBy    company-Y: .

<https://www.company-Y.com/legal/representer/verifiable/credential/purpose/bob-42-42-42-46-777>
    a                      foaf:Person ;
    a                      entity:LEAR_NP_VC ; ## REM: `entity:LegalPerson` and `cred:VerifiableCredential`
    a                      company-Y:PurposeAuthorization ; ## REM: THIS IS an `odrl:Assertion`!!!!!!!   <<<<<<<<
    cred:issuer            <https://www.company-Y.com/> ;
    cred:issuanceDate      "2023-11-10T00:01:00Z"^^xsd:dateTimeStamp ;
    cred:validFrom         "2023-11-10T00:01:00Z"^^xsd:dateTimeStamp ;
    cred:validTo           "2023-11-11T00:31:00Z"^^xsd:dateTimeStamp ; ## REM: works for half an hour...
    ## region odrl
    ## IMPORTANT: as `odrl:Permission`-Rule. This fact has a great impact:
    ## IMPORTANT: ...we have to define (in an ODRL Profile), that `cred:credentialSubject` is a sub-property of
    ## IMPORTANT: ...`odrl:permission` **OR** introduce a very new function.. somehow...  ?.-(?
    a                      odrl:Policy ;
    a                      odrl:Assertion ;
    ## REM: compact-policy with `odrl:assigner`, `odrl:target` and `odrl:assignee` on top level...
    ## TODO: TBC: who is the assigner?!?
    odrl:assigner          <https://www.company-Y.com/> ; ## REM: it is an `odrl:Party`, same as `entity:actOnBehalf`
    odrl:target            <https://www.company-B.com/> ; ## REM: it is an `odrl:Asset`, same as `purpose:target`
    ## HOLD: odrl:assignee          <https://www.company-Y.com/verifiable/identifier/bob/> ; ## REM: Bob is an Instance of `odrl:Party`, **TOO**!
    ## region: TURBO and ROCKET SCIENCE in good ol' DANGER ZONE
    odrl:assignee          [ a               odrl:PartyCollection ;
                             odrl:source     <https://www.company-Y.com/verifiable/identifier/bob/> ; ## REM: `odrl:Party`
                             odrl:refinement [ a                 odrl:Constraint ;
                                               odrl:leftOperand  "entity:actOnBehalf" ;
                                               odrl:operator     odrl:eq ;
                                               odrl:rightOperand <https://www.company-Y.com/> ;
                                               odrl:dataType     xsd:anyURI ; ] ;
                             odrl:refinement [ a                 odrl:Constraint ;
                                               odrl:leftOperand  "x-eidas:DateOfBirth" ; ## >>> "1998-11-11"^^xsd:dateTime
                                               odrl:operator     odrl:lt ;
                                               odrl:rightOperand "2005-11"^^xsd:gYearMonth ;
                                 ## REM:: **OR** :: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               odrl:rightOperand ex:EighteenYearsBeforeNow ;
                                               odrl:dataType     xsd:dateTimeStamp ; ] ; ] ;
    ## endregion: BO and ROCKET SCIENCE in good ol' DANGER ZONE
    ## endregion odrl
    ## IMPORTANT: Bob is an `odrl:Rule` (`odrl:Permission`)
    ## TODO: ODRL-Profile :: odrl:permission        <https://www.company-Y.com/verifiable/identifier/bob/> ;
    cred:credentialSubject <https://www.company-Y.com/verifiable/identifier/bob/> ;
    rdfs:isDefinedBy       company-Y: .

<https://www.company-Y.com/verifiable/identifier/bob/>            ## REM: Bob REBOOTED VERIFIABLE IDENTIFIER
    ## region `odrl:Party`
    ## endregion `odrl:Party`
    foaf:firstName      "Bob"^^xsd:string ;                    ## REM: from `foaf:Person`
    x-eidas:DateOfBirth "1998-11-11"^^xsd:date ;
    ## REM: `entity:actOnBehalf`:: Actor Authorization
    entity:actOnBehalf  <https://www.company-Y.com/> ;         ## REM: from `entity:LegalEntityAppointedRepresentative`
    ## REM: `purpose:target`, `purpose:purpose`:: Purpose Authorization
    purpose:target      <https://www.company-B.com/> ;
    purpose:purpose     <https://www.company-B.com/purpose/onboarding/> ;
    ## REM: and here: an alternative...

    ## region odrl
    a                   odrl:Party ; ## REM: used still by `odrl:assignee`
    ## region odrl :: Rule
    a                   odrl:Permission ;    ## REM: because `company-Y:PurposeAuthorization` is an odrl:Assertion **not** needed here...
    odrl:constraint     [ a                 odrl:Constraint ;
                          odrl:leftOperand  odrl:dateTime ;
                          odrl:operator     odrl:gteq ;
                          odrl:rightOperand "2023-11-10T00:01:00Z"^^xsd:dateTimeStamp ; ## REM: same as `cred:validFrom`
                          odrl:dataType     xsd:dateTimeStamp ; ] ;
    odrl:constraint     [ a                 odrl:Constraint ;
                          odrl:leftOperand  odrl:dateTime ;
                          odrl:operator     odrl:lt ;
                          odrl:rightOperand "2023-11-11T00:31:00Z"^^xsd:dateTimeStamp ; ## REM: same as `cred:validTo`
                          odrl:dataType     xsd:dateTimeStamp ; ] ;
    odrl:action         [ a         odrl:Action ;
                          rdf:value <https://www.company-B.com/purpose/onboarding/> ; ## REM: a `class` **and** a `odrl:Action`, too - anyway: "This is the Way"!
                          odrl:duty [ ] ; ] ;
    ## endregion odrl :: Rule
    ## endregion odrl

    rdfs:isDefinedBy    company-Y: .

## endregion credential :: Bob :: Verifiable Credential, `cred:credentialSubject` as `odrl:Permission`-Rule , very compact

# endregion DANGER ZONE

## endregion credential :: Bob

## endregion credential

###